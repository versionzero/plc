/*----------------------------------------------------------------------
  File    : ast.cc
  Contents: 
  Author  : Ben Burnett
  History : 08.02.2007 file created
----------------------------------------------------------------------*/

#if HAVE_CONFIG_H
#include <config.h>
#endif 

#include "ast.h"

using namespace ast;

/*----------------------------------------------------------------------
  Namespace Inclusions
----------------------------------------------------------------------*/

/*----------------------------------------------------------------------
  Constants
----------------------------------------------------------------------*/

/*----------------------------------------------------------------------
  Friend Functions/Operators
----------------------------------------------------------------------*/

/*----------------------------------------------------------------------
  Exceptions
----------------------------------------------------------------------*/

/*----------------------------------------------------------------------
  AST Nodes
----------------------------------------------------------------------*/

ast::ast::ast () {
}

/*--------------------------------------------------------------------*/

int ast::ast::line () const {
  return _line;
}
 
/*--------------------------------------------------------------------*/

int ast::ast::column () const {
  return _column;
}

/*----------------------------------------------------------------------
  Expressions
----------------------------------------------------------------------*/

expression::expression ( token const & op, type::code t ) 
  : _op ( op ), _type ( t ) {
}

/*--------------------------------------------------------------------*/

type::code expression::type () const {
  return _type;
}

/*--------------------------------------------------------------------*/

void expression::set_type ( type::code t ) {
  _type = t;
}

/*----------------------------------------------------------------------
  Expression : identifier
----------------------------------------------------------------------*/

identifier::identifier ( token const & op, type::code t, int b ) 
  : expression ( op, t ), _offset ( b ) {
}

/*--------------------------------------------------------------------*/

identifier::operator int () const {
  return _offset;
}

/*----------------------------------------------------------------------
  Expression : constant
----------------------------------------------------------------------*/

constant::constant ( token const & op, type::code t )
  : expression ( op, t ) {
}

/*--------------------------------------------------------------------*/

void constant::set_value ( token const & val ) {
  _op = val;
}

/*----------------------------------------------------------------------
  Operators
----------------------------------------------------------------------*/

/*----------------------------------------------------------------------
  Operator : op
----------------------------------------------------------------------*/

op::op ( token const & tok, type::code t )
  : expression ( tok, t ) {
}

/*----------------------------------------------------------------------
  Operator : access
----------------------------------------------------------------------*/

ast::access::access ( identifier a, expression i, type::code t ) 
  : op ( token ( INDEX, "[]" ), t ), _array ( a ), _index ( i ) {
}
